scara:
   # Publish all joint states -----------------------------------
   # This is actually not a controller, but a node that helps the controllers by providing status of joint states in simulator/real encoders
   # It publishes on the /joint_states topic  
   joint_state_controller:
      type: joint_state_controller/JointStateController
      publish_rate: 500  
  
   # Group of Velocity Controllers based on Position input ---------------------------------------
   all_joints_velocity_controller:
      type: scara_gazebo/MyVelocityController
      joints:
         - joint1
         - joint2
         - joint3
      pid:
         joint1: {p: 0.5, i: 0.0, d: 0.05}
         joint2: {p: 0.5, i: 0.0, d: 0.05}
         joint3: {p: 5.0, i: 0.0, d: 0.05}
   
  
  
#  # Velocity based Position Controllers ---------------------------------------
#  # i.e output is always velocity and input is position
#  joint1_position_controller:
#    type: scara_gazebo/MyPositionController
#    # type: velocity_controllers/JointPositionController
#    # type: effort_controllers/JointPositionController   # if we want to use effort output to control the joints based on position inputs
#    joint: joint1
#    pid: {p: 1.0, i: 0, d: 0.5}
#  joint2_position_controller:
#    type: scara_gazebo/MyPositionController
#    joint: joint2
#    pid: {p: 1.0, i: 0, d: 0.5}
#  joint3_position_controller:
#    type: scara_gazebo/MyPositionController
#    joint: joint3
#    pid: {p: 1000.0, i: 0, d: 50.0}   # when PD is used
#    pid: {p: 500.0, i: 5.0, d: 50.0} # when PID is used